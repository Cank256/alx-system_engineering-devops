#!/usr/bin/env bash
# This script installs and configures HAproxy on lb-01.

# Update the package list
sudo apt-get update

# Install nginx
sudo apt-get install -y nginx

# Ensure nginx is running
sudo service nginx start

# Configure redirection and error handling in Nginx
echo "server {
        listen 80;
        listen [::]:80;

        server_name cank.tech;

        root /var/www/html;
        index index.html;

        location / {
            try_files \$uri \$uri/ =404;
        }
        
        location /redirect_me {
            return 301 https://www.youtube.com/watch?v=QH2-TGUlwu4;
        }

        error_page 404 /404.html;
        location = /404.html {
            root /var/www/html;
            internal;
            return 404 \"Ceci n'est pas une page\";
        }
}" | sudo tee /etc/nginx/sites-available/default > /dev/null

# Configure custom HTTP header
sudo echo "add_header X-Served-By \$HOSTNAME;" | sudo tee -a /etc/nginx/sites-available/default

# Verify nginx configuration
sudo nginx -t

# Restart Nginx for changes to take effect
sudo service nginx restart

# Update package list
sudo apt-get update

# Install HAproxy
sudo apt-get -y install haproxy

# Configure HAproxy
sudo sed -i 's/.*frontend.*$/frontend main\n\tbind \*:80\n\tdefault_backend webservers/' /etc/haproxy/haproxy.cfg
sudo echo -e "backend webservers\n\tbalance roundrobin\n\tserver web-01 3.90.82.131:80 check\n\tserver web-02 34.202.159.65:80 check" | sudo tee -a /etc/haproxy/haproxy.cfg

# Enable HAproxy init script
sudo sed -i 's/ENABLED=0/ENABLED=1/' /etc/default/haproxy

# Restart HAproxy for changes to take effect
sudo service haproxy restart
